name: Laravel

on: [push]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        db: [sqlite, mysql, mariadb, postgres]

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: laravel_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval=10s --health-timeout=5s --health-retries=3

      mariadb:
        image: mariadb:10
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel_test
        ports:
          - 3307:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.4'
    - uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        if [ "${{ matrix.db }}" == "sqlite" ]; then
          mkdir -p database
          touch database/database.sqlite
        elif [ "${{ matrix.db }}" == "mysql" ]; then
          mysql -h 127.0.0.1 -P 3306 -u root -ppassword -e "CREATE DATABASE IF NOT EXISTS laravel_test;"
        elif [ "${{ matrix.db }}" == "mariadb" ]; then
          mysql -h 127.0.0.1 -P 3307 -u root -ppassword -e "CREATE DATABASE IF NOT EXISTS laravel_test;"
        elif [ "${{ matrix.db }}" == "postgres" ]; then
          PGPASSWORD=password psql -h 127.0.0.1 -p 5432 -U postgres -c "SELECT 1 FROM pg_database WHERE datname = 'laravel_test'" | grep -q 1 || PGPASSWORD=password psql -h 127.0.0.1 -p 5432 -U postgres -c "CREATE DATABASE laravel_test;"
        fi
    - name: Install NPM dependencies
      run: npm ci
    - name: Build frontend assets
      run: npm run build
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_URL: ${{ matrix.db == 'sqlite' && 'sqlite:///database/database.sqlite' || matrix.db == 'mysql' && 'mysql://root:password@127.0.0.1:3306/laravel_test' || matrix.db == 'mariadb' && 'mysql://root:password@127.0.0.1:3307/laravel_test' || 'pgsql://postgres:password@127.0.0.1:5432/laravel_test' }}
      run: php artisan test --log-junit test-results.xml
    - name: Run ESLint
      run: npx eslint .
    - name: Run TypeScript checks
      run: npx vue-tsc
    - name: Run PHPStan
      run: vendor/bin/phpstan analyze
    - name: Upload test logs if tests fail
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-logs-${{ matrix.db }}
        path: |
          test-results.xml
          storage/logs/
          ./laravel.log
